name: 'Notify Success'
description: 'Send success notifications for deployment'

inputs:
  environment:
    description: 'Environment that was deployed'
    required: true
  registry:
    description: 'Docker registry URL'
    required: true
  image-name:
    description: 'Docker image name'
    required: true
  resend-api-key:
    description: 'Resend API key for email sending'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Notify deployment success
      uses: actions/github-script@v6
      with:
        script: |
          const environment = '${{ inputs.environment }}';
          const environmentName = environment.charAt(0).toUpperCase() + environment.slice(1);
          
          // Create deployment notification
          const message = `‚úÖ **${environmentName} Deployment Successful**
          
          **Repository**: ${context.repo.owner}/${context.repo.repo}
          **Branch**: ${context.ref_name}
          **Commit**: ${context.sha.substring(0, 7)}
          **Triggered by**: ${context.actor}
          **Image**: ${{ inputs.registry }}/${{ inputs.image-name }}:${context.sha.substring(0, 7)}
          
          üéâ All checks passed and ${environment} deployment completed successfully!`;
          
          // Log notification
          console.log('üì¢ DEPLOYMENT NOTIFICATION:');
          console.log(message);
          
          // Create GitHub comment for tracking (only for pull requests)
          if (context.eventName === 'pull_request') {
            try {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: message
              });
              console.log('‚úÖ Success comment created on PR');
            } catch (error) {
              console.log('‚ö†Ô∏è Could not create PR comment (this is normal for some permissions)');
              console.log('Error details:', error.message);
            }
          }

    - name: Send success email notification
      uses: actions/github-script@v6
      with:
        script: |
          const environment = '${{ inputs.environment }}';
          const environmentName = environment.charAt(0).toUpperCase() + environment.slice(1);
          
          const emailData = {
            from: 'CI/CD Pipeline <noreply@your-domain.com>',
            to: ['shalommeoded@gmail.com'],
            subject: `‚úÖ ${environmentName} Deployment Successful - ${context.repo.repo}`,
            html: `
              <h2>üéâ Deployment Successful!</h2>
              <p>Your deployment to <strong>${environmentName}</strong> environment has completed successfully!</p>
              
              <h3>Details:</h3>
              <ul>
                <li><strong>Repository:</strong> ${context.repo.owner}/${context.repo.repo}</li>
                <li><strong>Branch:</strong> ${context.ref_name}</li>
                <li><strong>Commit:</strong> ${context.sha.substring(0, 7)}</li>
                <li><strong>Environment:</strong> ${environmentName}</li>
                <li><strong>URL:</strong> ${environment === 'production' ? 'https://myprod.getthemilkshake.com' : environment === 'staging' ? 'https://mystaging.getthemilkshake.com' : 'https://mydev.getthemilkshake.com'}</li>
              </ul>
              
              <p>üéâ All quality gates passed and deployment completed successfully!</p>
              
              <p>Best regards,<br>CI/CD Pipeline</p>
            `
          };
          
          try {
            const response = await fetch('https://api.resend.com/emails', {
              method: 'POST',
              headers: {
                'Authorization': `Bearer ${{ inputs.resend-api-key }}`,
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(emailData)
            });
            
            if (response.ok) {
              console.log('‚úÖ Success email sent via Resend');
            } else {
              console.log('‚ö†Ô∏è Failed to send email via Resend');
              console.log('Response:', await response.text());
            }
          } catch (error) {
            console.log('‚ö†Ô∏è Error sending email via Resend:', error.message);
          }
