name: 'Generate Version'
description: 'Generate semantic version tags based on branch and package.json'

runs:
  using: 'composite'
  steps:
    - name: Generate version tag
      shell: bash
      run: |
        # Get base version from package.json
        BASE_VERSION=$(node -p "require('./package.json').version")
        
        # Determine environment suffix based on branch (SemVer compliant)
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          # Production: Clean version without pre-release suffix
          VERSION_SUFFIX=""
          ENV_SUFFIX="prod"
          VERSION_TYPE="release"
        elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
          # Development: Pre-release with dev suffix
          VERSION_SUFFIX="-dev"
          ENV_SUFFIX="dev"
          VERSION_TYPE="pre-release"
        elif [ "${{ github.ref }}" = "refs/heads/staging" ]; then
          # Staging: Pre-release with stg suffix
          VERSION_SUFFIX="-stg"
          ENV_SUFFIX="stg"
          VERSION_TYPE="pre-release"
        elif [[ "${{ github.ref }}" =~ refs/heads/release/.* ]]; then
          # Release candidate: Pre-release with rc suffix
          RC_NUMBER=$(echo "${{ github.ref }}" | sed 's|refs/heads/release/||')
          VERSION_SUFFIX="-rc.${RC_NUMBER}"
          ENV_SUFFIX="rc"
          VERSION_TYPE="release-candidate"
        elif [[ "${{ github.ref }}" =~ refs/heads/hotfix/.* ]]; then
          # Hotfix: Pre-release with hotfix suffix
          VERSION_SUFFIX="-hotfix"
          ENV_SUFFIX="hotfix"
          VERSION_TYPE="pre-release"
        else
          # Feature branches: Pre-release with dev suffix
          VERSION_SUFFIX="-dev"
          ENV_SUFFIX="dev"
          VERSION_TYPE="pre-release"
        fi
        
        # Add build metadata with short commit SHA (SemVer 2.0.0 compliant)
        COMMIT_SHA=$(git rev-parse --short HEAD)
        BUILD_DATE=$(date -u +"%Y%m%d.%H%M%S")
        
        # Create SemVer compliant version
        if [ -n "$VERSION_SUFFIX" ]; then
          # Pre-release version: v1.0.0-dev+abc123.20240825.145920
          FULL_VERSION="v${BASE_VERSION}${VERSION_SUFFIX}+${COMMIT_SHA}.${BUILD_DATE}"
        else
          # Release version: v1.0.0+abc123.20240825.145920
          FULL_VERSION="v${BASE_VERSION}+${COMMIT_SHA}.${BUILD_DATE}"
        fi
        
        # Set outputs for workflow use
        echo "version=${FULL_VERSION}" >> $GITHUB_OUTPUT
        echo "base_version=${BASE_VERSION}" >> $GITHUB_OUTPUT
        echo "version_suffix=${VERSION_SUFFIX}" >> $GITHUB_OUTPUT
        echo "env_suffix=${ENV_SUFFIX}" >> $GITHUB_OUTPUT
        echo "version_type=${VERSION_TYPE}" >> $GITHUB_OUTPUT
        echo "commit_sha=${COMMIT_SHA}" >> $GITHUB_OUTPUT
        echo "build_date=${BUILD_DATE}" >> $GITHUB_OUTPUT
        
        # Log version information
        echo "Generated SemVer version: ${FULL_VERSION}"
        echo "Base version: ${BASE_VERSION}"
        echo "Pre-release suffix: ${VERSION_SUFFIX}"
        echo "Environment: ${ENV_SUFFIX}"
        echo "Version type: ${VERSION_TYPE}"
        echo "Commit SHA: ${COMMIT_SHA}"
        echo "Build date: ${BUILD_DATE}"
