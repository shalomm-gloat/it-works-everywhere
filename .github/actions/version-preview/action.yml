name: 'Version Preview'
description: 'Show version preview for PRs without making changes'

inputs:
  github-token:
    description: 'GitHub token for API access'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Install semver dependency
      shell: bash
      run: yarn add semver

    - name: Get current version
      id: current-version
      shell: bash
      run: |
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        echo "Current version: $CURRENT_VERSION"
        echo "result=$CURRENT_VERSION" >> $GITHUB_OUTPUT

    - name: Calculate preview version
      id: preview-version
      shell: bash
      env:
        CURRENT_VERSION: '${{ steps.current-version.outputs.result }}'
      run: |
        # Default to patch bump for preview
        NEW_VERSION=$(node -e "
          const semver = require('semver');
          const current = '$CURRENT_VERSION';
          console.log(semver.inc(current, 'patch'));
        ")
        echo "Preview version: $NEW_VERSION"
        echo "result=$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Create PR comment with version preview
      uses: actions/github-script@v6
      env:
        GH_TOKEN: ${{ inputs.github-token }}
      with:
        script: |
          // Determine environment suffix based on target branch
          const targetBranch = context.payload.pull_request.base.ref;
          let envSuffix = '';
          
          if (targetBranch === 'main') {
            envSuffix = '-prod';
          } else if (targetBranch === 'staging') {
            envSuffix = '-stg';
          } else if (targetBranch === 'develop') {
            envSuffix = '-dev';
          } else {
            envSuffix = '-dev'; // default
          }

          const message = `## ðŸ“‹ Version Preview

          **Current Version:** ${{ steps.current-version.outputs.result }}
          **Preview Version:** ${{ steps.preview-version.outputs.result }}
          **Target Branch:** ${targetBranch}
          **Bump Type:** patch (default for ${targetBranch})

          ### What will happen on merge:
          - Package.json version will be updated to **${{ steps.preview-version.outputs.result }}**
          - Docker image will be tagged as **v${{ steps.preview-version.outputs.result }}${envSuffix}**
          - Changes will be committed and pushed to ${targetBranch}

          > ðŸ’¡ This is a preview only. No changes will be made to this PR.`;

          // Create comment on PR
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: message
          });

          console.log('âœ… Version preview comment created on PR'); 
