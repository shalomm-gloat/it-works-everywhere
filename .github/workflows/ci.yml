name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/it-works-on-my-machine

jobs:
  test:
    name: Test & Quality Gates
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run tests and quality gates
      uses: ./.github/actions/test-quality

    - name: Notify failure
      if: failure()
      uses: ./.github/actions/notify-failure
      with:
        environment: development
        brevo-smtp-user: ${{ secrets.BREVO_SMTP_USER }}
        brevo-smtp-key: ${{ secrets.BREVO_SMTP_KEY }}

  build:
    name: Build & Deploy
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.event_name == 'workflow_dispatch'
    environment: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production' || (github.ref == 'refs/heads/develop' && 'staging' || 'development')) }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get target environment
      id: env
      uses: ./.github/actions/get-environment
      with:
        workflow-dispatch-env: ${{ github.event.inputs.environment }}

    - name: Build and push Docker image
      uses: ./.github/actions/docker-build
      with:
        registry: ${{ env.REGISTRY }}
        image-name: ${{ env.IMAGE_NAME }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Deploy application
      uses: ./.github/actions/deploy
      with:
        environment: ${{ steps.env.outputs.environment }}

    - name: Notify success
      if: success()
      uses: ./.github/actions/notify-success
      with:
        environment: ${{ steps.env.outputs.environment }}
        registry: ${{ env.REGISTRY }}
        image-name: ${{ env.IMAGE_NAME }}
        brevo-smtp-user: ${{ secrets.BREVO_SMTP_USER }}
        brevo-smtp-key: ${{ secrets.BREVO_SMTP_KEY }}

    - name: Notify failure
      if: failure()
      uses: ./.github/actions/notify-failure
      with:
        environment: ${{ steps.env.outputs.environment }}
        brevo-smtp-user: ${{ secrets.BREVO_SMTP_USER }}
        brevo-smtp-key: ${{ secrets.BREVO_SMTP_KEY }}
